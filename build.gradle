import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id 'com.bmuschko.docker-remote-api' version '3.4.4'
}

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

ext{
    commonJvmArgs = ['-Dcommon=shared']
}

// Standalone Application Configuration
application {
    mainClassName = 'example.multiappstartscript.Main'
    applicationName = 'example-app'
    applicationDefaultJvmArgs = ['-Dexample.deployment=Standalone'].plus(project.ext.commonJvmArgs)
}

// Docker Configuration
task createDockerStartScript(type: CreateStartScripts) {
    mainClassName = "${application.mainClassName}"
    classpath = startScripts.classpath
    outputDir = new File("${buildDir}/dockerStartScripts")
    applicationName = "${application.applicationName}-docker"
    defaultJvmOpts = ['-Dexample.deployment=Docker'].plus(project.ext.commonJvmArgs)
}

build.dependsOn createDockerStartScript

task buildImage(type: DockerBuildImage, dependsOn: build) {
    inputDir = new File("${projectDir}")
    dockerFile = new File("${projectDir}/src/docker/Dockerfile")
    tags = ["gregnetifi/${application.applicationName}", "gregnetifi/${application.applicationName}:${version}"]
}

// Build Distributions
distributions {
    main {
        baseName = "${application.applicationName}"
    }

    docker {
        baseName = "${application.applicationName}-docker"
        contents {
            from (jar) {
                into 'lib'
            }
            from (createDockerStartScript) {
                into 'bin'
                fileMode = 0755
            }
        }
    }
}

dockerDistTar {
    version = ''
}

dockerDistZip {
    enabled = false
}
